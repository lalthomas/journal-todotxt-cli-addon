#!/bin/bash
# todo.txt add-on to create and manage journal
# Copyright (c) Lal Thomas, http://lalamboori.blogspot.in
# License: GPL3, http://www.gnu.org/copyleft/gpl.html

# Stop Verbose lines, thanks to Mark Harrison
TODOTXT_VERBOSE=0
TODOTXT_PLAIN=0

author="Lal Thomas"
docRootPath="$rootPath/doc"

journal_template="$doRootPath/journal.md"
journal_yesterday_file="$docRootPath/$yesterday-journal.md"
journal_file="$docRootPath/$today-journal.md"

function usage() {
  
  echo "  journal [OPTION] [TERM]"  
  exit
}

create(){	
	
	add_header(){
	
		"$TODO_FULL_SH" markdown add yaml "Journal Notes" "$journal_file"
		"$TODO_FULL_SH" markdown add yaml "$longdate" "$journal_file"
		"$TODO_FULL_SH" markdown add yaml "$author" "$journal_file"
		"$TODO_FULL_SH" markdown add blank "" "$journal_file"
	
	}
	
	add_general_info(){
	
		"$TODO_FULL_SH" markdown add H3 "General Information" "$journal_file"
		"$TODO_FULL_SH" markdown add p "Day of Week : $dayOfWeeK" "$journal_file"
		# TODO : add weather info
		# TODO : add information about day
	}
	
	# Standup report
	add_standup_report(){
	
		
		"$TODO_FULL_SH" markdown add H3 "Standup" "$journal_file"
	
		# last day
		echo
		echo "What is the key things you did last day ?"
		echo
		keythyesterday=$(sed '/^$/q')		
		"$TODO_FULL_SH" markdown add blank "" "$journal_file"
		"$TODO_FULL_SH" markdown add p "*What did I do last day*" "$journal_file"		
		echo $keythyesterday >>"$journal_file"
		
		# today
		echo
		echo "what will you do today ?"
		echo
		keythtoday=$(sed '/^$/q')
		"$TODO_FULL_SH" markdown add blank "" "$journal_file"		
		"$TODO_FULL_SH" markdown add p "*What I will do today ?*" "$journal_file"
		echo $keythtoday >>"$journal_file"
		
		#road blocks
		echo
		echo "what are the roadblocks are you facing ?"
		echo
		roadblocks=$(sed '/^$/q')
		"$TODO_FULL_SH" markdown add blank "" "$journal_file"
		"$TODO_FULL_SH" markdown add p "*Roadblocks*" "$journal_file"		
		echo $roadblocks >>"$journal_file"

		# add blank line
		"$TODO_FULL_SH" markdown add blank "" "$journal_file"
		
	}
	
	add_task_schedule(){
	
		# Dump the today's scheduled tasks from todo.txt and extra line breaks
		"$TODO_FULL_SH" markdown add H3 "Scheduled Tasks" "$journal_file"	  
		sed -n -e 's/'$longdate'/* &/p'<"$TODO_FILE" >>"$journal_file"
		printf "\n">>"$journal_file"

	}
		
	append_template(){
	
		# Read input file into a string variable. 
		# Thanks : http://stackoverflow.com/a/2789399/2182047  
		copyfilecontent=$(cat "$journal_template")
		#copy contents to journal file
		printf "$copyfilecontent" >>"$journal_file"  
		# add two blank line
		printf "\n\n" >>"$journal_file"	
		
	}
	
	add_google_calendar_schedule(){
	
		"$TODO_FULL_SH" markdown add H3 "Scheduled Events" "$journal_file"
		printf "Start Time			End Time			Event Title" >>"$journal_file"		
		printf '\n%s\n' "-----------------	-----------------	--------------------------" >>"$journal_file"
		/cygdrive/c/Python27/python.exe "C:\Python27\Scripts\gcalcli" -nocolor -tsv agenda '12am' '11pm' >>"$journal_file"
		printf "\n">>"$journal_file"
		
	}
	
	add_birthday_list(){

		"$TODO_FULL_SH" markdown add H3 "Wish List" "$journal_file"
		# add people from wish script			
		"d:/Dropbox/project/20131027-scripts project/20160222-wish-bash script.sh" "/cygdrive/d/Dropbox/do/reference/20160222-greetings doc.csv" list today >>"$journal_file"
		printf "\n">>"$journal_file"
	}
	
	# check if file exists or not
	if [ ! -f "$journal_file" ];then
	  
		add_header
		add_general_info
		add_standup_report
		echo "Adding task schedule and events. Please wait ..."
		add_task_schedule
		add_birthday_list
		# get google calendar agenda using [insanum/gcalcli: Google Calendar Command Line Interface](https://github.com/insanum/gcalcli)	
		add_google_calendar_schedule
		append_template		
		echo 
		echo "Journal created successfully"

	fi
	"$TODO_FULL_SH" file open "$journal_file"
}

open(){
	
	journal_file="$@"		
	# check if file exists or not
	if [ -f "$journal_file" ];then
		"$TODO_FULL_SH" file open "$journal_file"
	fi	
	
}

# TODO : improve
# TODO : modularize the components


add_todo_done_items(){

	"$TODO_FULL_SH" markdown add H2 "Done Tasks" "$journal_file"
	"$TODO_FULL_SH" listall "x $longdate" | sed -n -e 's/[0-9][0-9][0-9] x [0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]/ \* /p'>>"$journal_file"
}

add_todo_done_items_to_yesterday_journal(){

	## //TODO : improve
	"$TODO_FULL_SH" markdown add H2 "Done Tasks" "$journal_yesterday_file"
	"$TODO_FULL_SH" listall "x $longyesterday" | sed -n -e 's/[0-9][0-9][0-9] x [0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]/ \* /p'>>"$journal_yesterday_file"

}

add_gratitude(){

	"$TODO_FULL_SH" markdown add H3 "Thank You" "$journal_file"	  
	echo
	echo "To whom you are thankful to :"
	echo	
	helped=$(sed '/^$/q')
	"$TODO_FULL_SH" markdown add p "Today I am thankful to these people" "$journal_file"
	echo $helped >>"$journal_file"

}

# Get action
action=$1
shift

# Get option
option=$1;
shift

 case $option in

	"usage")
		usage
		exit	
		;;
	
	"create")
		create				
		exit
		;;
	
	"open")			   	
		open		
		exit		
		;;
	
	"add")
		
		#TODO: update with filepath		
		if [[ -z "$1" ]]; then
		   echo "journal error : few argument"
		else
		   PARAM="$1"		   
		   case "$PARAM" in
			todo_today)			
				add_todo_done_items	
				exit
				;;			
			todo_yesterday)
				add_todo_done_items_to_yesterday_journal
				exit
				;;					
			gratitude)
				add_gratitude
				exit
				;;				
			esac		
		fi	
		exit
		;;				
	
	*)
		# list planner file	
		echo
		echo "journal error : arguments - $@ - not valid" 
		echo 
		usage
		exit
		;;	   
esac
